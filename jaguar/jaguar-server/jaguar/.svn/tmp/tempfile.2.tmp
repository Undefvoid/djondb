
#include "util/timerecord.h"
#include "util/logger/logger.h"
#include "util/util.h"

using namespace std;

<<<<<<< .mine
void testFunc() {
    CacheGroup group = getGlobalCache("Test");

    string test = "test";
    group.add("Test", &test);

    Logger* log = getLogger(NULL);

    CacheGroup group2 = getGlobalCache("Test");
    
    log->info("Size: " + toString(group2.size()));
    
    log->info("Cached: " + *((string*)group2.get("Test")));
}

=======
>>>>>>> .r219
int main() {
    Logger* log = getLogger(NULL);
    TimeRecord* record = getTimeRecord();

<<<<<<< .mine
    testFunc();

    CacheGroup group = getGlobalCache("Test");
/*
    string *test;
    *test = "testvalue";
    group->add("Test", test);
*/
    log->info("Size out: " + toString(group.size()));
    string* s = (string*) group.get("Test");

    log->info("Cached " + *s);

    string* s2 = (string*) group.get("Test");

    log->info("Cached2 " + *s2);

    CacheGroup global = getGlobalCache("Test");
    string* s3 = (string*) group.get("Test");
    log->info("Cache3 " + *s3);

=======
>>>>>>> .r219
    log->info("Server started up: " + toString(record->getTimeInMillis()));
 
    return 0;
}
